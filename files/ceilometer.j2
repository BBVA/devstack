# turn on all the ceilometer services by default (except for ipmi pollster)
# Pollsters
# enable_service ceilometer-acompute ceilometer-acentral
# Notification Agent
# enable_service ceilometer-anotification
# Data Collector
# enable_service ceilometer-collector

# Default directories
#CEILOMETER_DIR=$DEST/ceilometer
#CEILOMETER_CONF_DIR=/etc/ceilometer
#CEILOMETER_CONF=$CEILOMETER_CONF_DIR/ceilometer.conf
#CEILOMETER_AUTH_CACHE_DIR=/var/cache/ceilometer
#CEILOMETER_WSGI_DIR=/var/www/ceilometer

# Set up no backend
# One of : es, mysql, postgresql, mongodb or none
#CEILOMETER_BACKEND=mongodb

# Gnocchi default archive_policy for Ceilometer
#GNOCCHI_ARCHIVE_POLICY=low

# Ceilometer connection info.
#CEILOMETER_SERVICE_PROTOCOL=http
#CEILOMETER_SERVICE_HOST=${SERVICE_HOST}
#CEILOMETER_SERVICE_PORT=8777
#CEILOMETER_USE_MOD_WSGI=${ENABLE_HTTPD_MOD_WSGI_SERVICES}

# To enable OSprofiler change value of this variable to "notifications,profiler"
#CEILOMETER_NOTIFICATION_TOPICS=notifications

#CEILOMETER_COORDINATION_URL=redis://localhost:6379
#CEILOMETER_PIPELINE_INTERVAL=""

# Cache Options
# NOTE(cdent): These are incomplete and specific for this testing.
#CEILOMETER_CACHE_BACKEND=dogpile.cache.redis
#CEILOMETER_CACHE_URL=redis://localhost:6379

#CEILOMETER_EVENT_ALARM=False

# Tell Tempest this project is present
TEMPEST_SERVICES+=,ceilometer

#CEILOMETERCLIENT_REPO=${GIT_BASE}/openstack/python-ceilometerclient.git
CEILOMETERCLIENT_BRANCH={{ service.release|default("$DEVSTACK_RELEASE") }}

# Set up default directories for client and middleware
#GITREPO["python-ceilometerclient"]=${CEILOMETERCLIENT_REPO}
GITBRANCH["python-ceilometerclient"]=${CEILOMETERCLIENT_BRANCH}
#GITDIR["python-ceilometerclient"]=$DEST/python-ceilometerclient
#GITDIR["ceilometermiddleware"]=$DEST/ceilometermiddleware

